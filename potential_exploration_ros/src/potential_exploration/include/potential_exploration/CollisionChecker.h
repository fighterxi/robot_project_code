// Generated by gencpp from file potential_exploration/CollisionChecker.msg
// DO NOT EDIT!


#ifndef POTENTIAL_EXPLORATION_MESSAGE_COLLISIONCHECKER_H
#define POTENTIAL_EXPLORATION_MESSAGE_COLLISIONCHECKER_H

#include <ros/service_traits.h>


#include <potential_exploration/CollisionCheckerRequest.h>
#include <potential_exploration/CollisionCheckerResponse.h>


namespace potential_exploration
{

struct CollisionChecker
{

typedef CollisionCheckerRequest Request;
typedef CollisionCheckerResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct CollisionChecker
} // namespace potential_exploration


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::potential_exploration::CollisionChecker > {
  static const char* value()
  {
    return "a449f8e4f36ecffb084f5776a8156876";
  }

  static const char* value(const ::potential_exploration::CollisionChecker&) { return value(); }
};

template<>
struct DataType< ::potential_exploration::CollisionChecker > {
  static const char* value()
  {
    return "potential_exploration/CollisionChecker";
  }

  static const char* value(const ::potential_exploration::CollisionChecker&) { return value(); }
};


// service_traits::MD5Sum< ::potential_exploration::CollisionCheckerRequest> should match 
// service_traits::MD5Sum< ::potential_exploration::CollisionChecker > 
template<>
struct MD5Sum< ::potential_exploration::CollisionCheckerRequest>
{
  static const char* value()
  {
    return MD5Sum< ::potential_exploration::CollisionChecker >::value();
  }
  static const char* value(const ::potential_exploration::CollisionCheckerRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::potential_exploration::CollisionCheckerRequest> should match 
// service_traits::DataType< ::potential_exploration::CollisionChecker > 
template<>
struct DataType< ::potential_exploration::CollisionCheckerRequest>
{
  static const char* value()
  {
    return DataType< ::potential_exploration::CollisionChecker >::value();
  }
  static const char* value(const ::potential_exploration::CollisionCheckerRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::potential_exploration::CollisionCheckerResponse> should match 
// service_traits::MD5Sum< ::potential_exploration::CollisionChecker > 
template<>
struct MD5Sum< ::potential_exploration::CollisionCheckerResponse>
{
  static const char* value()
  {
    return MD5Sum< ::potential_exploration::CollisionChecker >::value();
  }
  static const char* value(const ::potential_exploration::CollisionCheckerResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::potential_exploration::CollisionCheckerResponse> should match 
// service_traits::DataType< ::potential_exploration::CollisionChecker > 
template<>
struct DataType< ::potential_exploration::CollisionCheckerResponse>
{
  static const char* value()
  {
    return DataType< ::potential_exploration::CollisionChecker >::value();
  }
  static const char* value(const ::potential_exploration::CollisionCheckerResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // POTENTIAL_EXPLORATION_MESSAGE_COLLISIONCHECKER_H
